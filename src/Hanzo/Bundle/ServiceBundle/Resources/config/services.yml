parameters:
    service_factory.class: Hanzo\Bundle\ServiceBundle\ServiceFactory

    mail_manager.class: Hanzo\Bundle\ServiceBundle\Services\MailService
    sms_manager.class: Hanzo\Bundle\ServiceBundle\Services\SmsService
    twig_string.class: Hanzo\Bundle\ServiceBundle\Services\TwigStringService
    cache_manager.class: Hanzo\Bundle\ServiceBundle\Services\CacheService
    cleanup_manager.class: Hanzo\Bundle\ServiceBundle\Services\CleanupService
    geoip_manager.class: Hanzo\Bundle\ServiceBundle\Services\GeoIPService
    replication_manager.class: Hanzo\Bundle\ServiceBundle\Services\ReplicationService
    deadorder_manager.class: Hanzo\Bundle\ServiceBundle\Services\DeadOrderService

services:
    service_factory:
        class:           %service_factory.class%
        arguments:
            - @service_container

    mail_manager:
        class:           %mail_manager.class%
        factory_service: service_factory
        factory_method:  get
        arguments:
            service:     mail
            parameters:  [@mailer, @twig_string]
            class:       %mail_manager.class%

    sms_manager:
        class:           %sms_manager.class%
        factory_service: service_factory
        factory_method:  get
        arguments:
            service:     sms
            parameters:  [@translator]
            class:       %sms_manager.class%

    twig_string:
        class:           %twig_string.class%
        factory_service: service_factory
        factory_method:  get
        arguments:
            service:     twig_string
            parameters:  [@templating]
            class:       %twig_string.class%

    cache_manager:
        class:           %cache_manager.class%
        factory_service: service_factory
        factory_method:  get
        arguments:
            service:     cache
            parameters:  [@redis.main]
            class:       %cache_manager.class%

    cleanup_manager:
        class:           %cleanup_manager.class%
        factory_service: service_factory
        factory_method:  get
        arguments:
            service:     cleanup
            parameters:  [@payment.dibsapi]
            class:       %cleanup_manager.class%

    geoip_manager:
        class:           %geoip_manager.class%
        factory_service: service_factory
        factory_method:  get
        arguments:
            service:     geoip
            parameters:  [@request]
            class:       %geoip_manager.class%
        scope: request

    replication_manager:
        class:           %replication_manager.class%
        factory_service: service_factory
        factory_method:  get
        arguments:
            service:     replication
            parameters:  [@propel.configuration]
            class:       %replication_manager.class%

    deadorder_manager:
        class:           %deadorder_manager.class%
        factory_service: service_factory
        factory_method:  get
        arguments:
            service:     deadorder
            parameters:  [@payment.dibsapi, @event_dispatcher, @ax.out]
            class:       %deadorder_manager.class%
